GLOBAL StartInTraybar
GLOBAL activeConfigOnStartup 1

# special keys (except for F13, these are handled by the AHK script):
#  F13 = macro key for use in apps, triggered by ` (grave accent key, under Escape)
#  Ctrl-F14 = switching to CONFIG_1
#  Shift-F14 = switching to CONFIG_2
#  Ctrl-F15 = hide GUI indicator
#  Shift-F15 = show GUI indicator
#  F16 = minimize current window
#  Shift-F16 = close current window
#  F17 = invalid key (TODO: list invalid hotkeys and setup the remap)



[CONFIG_1]
OPTION configName base
OPTION DelayForKeySequenceMS 0

INCLUDE base_remaps
INCLUDE navigation
INCLUDE special_chars
INCLUDE accents

# switch config and send hotkey to AHK to switch the GUI indicator
COMBO q [^^&. .... ....] > sequence(CONFIGSWITCH:2_&lshf_f14_^lshf)
COMBO ' [] > sequence(CONFIGSWITCH:2_&lshf_f14_^lshf)
COMBO esc [^^^& .... ....] > sequence(CONFIGSWITCH:2_&lshf_f14_^lshf)



[CONFIG_2]
OPTION configName browser_mode
OPTION DelayForKeySequenceMS 0

INCLUDE base_remaps
INCLUDE browser_mode
INCLUDE special_chars
INCLUDE accents

# switch config and send hotkey to AHK to switch the GUI indicator
COMBO 1 [] > sequence(CONFIGSWITCH:1_&lctrl_f14_^lctrl)
COMBO ' [] > sequence(CONFIGSWITCH:1_&lctrl_f14_^lctrl)
COMBO esc [^^^& .... ....] > sequence(CONFIGSWITCH:1_&lctrl_f14_^lctrl)



#===================================================================
#= INCLUDED SECTIONS ===============================================
#===================================================================



[base_remaps]
# key combos must use modifiers; as we want to use CapsLock as a modifier, we'll rewire it to a virtual modifier 9
REWIRE caps mod9
# same for ; and L\ (left backslash on ISO layout)
REWIRE ; mod10
REWIRE L\ mod10 # left backslash on ISO layout

COMBO mod9 [&.&.] > key(caps)  # Ctrl-Alt-CapsLock -> CapsLock
COMBO rshf [^. .... ....] > key(f16)
COMBO rshf [&. .... ....] > moddedKey(f16 + &)

COMBO print [&^] > moddedKey(f15 + &.)
COMBO print [^&] > moddedKey(f15 + .&)

REWIRE \ LWin
REWIRE RAlt apps  # context menu
REWIRE ` f13  # macro key, currently used in IDEA
COMBO [ [] > combo(lctrl + lwin + left)  # switch virtual desktop left
COMBO ] [] > combo(lctrl + lwin + right)  # switch virtual desktop right

# the sleeps before Enter seem necessary for the Firefox address bar
# appends " site:reddit.com<enter>" to the search query
COMBO - [^^^^] > sequence(end_space_s_i_t_e_&lshf_;_^lshf_r_e_d_d_i_t_._c_o_m_sleep:100_ret)
# sends !g DuckDuckGo to repeat the same search in Google
COMBO = [^^^^] > sequence(/_sleep:5_end_space_&lshf_1_^lshf_g_sleep:100_ret)



[browser_mode]
# separate mode, where normal keys are remapped to control Firefox using single keypresses

# send original keys when mod10 is held
COMBO q [^^&. .... ....] > key(q)
COMBO w [^^&. .... ....] > key(w)
COMBO e [^^&. .... ....] > key(e)
COMBO r [^^&. .... ....] > key(r)
COMBO t [^^&. .... ....] > key(t)
COMBO y [^^&. .... ....] > key(y)
COMBO u [^^&. .... ....] > key(u)
COMBO i [^^&. .... ....] > key(i)
COMBO o [^^&. .... ....] > key(o)
COMBO p [^^&. .... ....] > key(p)
COMBO a [^^&. .... ....] > key(a)
COMBO s [^^&. .... ....] > key(s)
COMBO d [^^&. .... ....] > key(d)
COMBO f [^^&. .... ....] > key(f)
COMBO g [^^&. .... ....] > key(g)
COMBO h [^^&. .... ....] > key(h)
COMBO j [^^&. .... ....] > key(j)
COMBO k [^^&. .... ....] > key(k)
COMBO l [^^&. .... ....] > key(l)
COMBO z [^^&. .... ....] > key(z)
COMBO x [^^&. .... ....] > key(x)
COMBO c [^^&. .... ....] > key(c)
COMBO v [^^&. .... ....] > key(v)
COMBO b [^^&. .... ....] > key(b)
COMBO n [^^&. .... ....] > key(n)
COMBO m [^^&. .... ....] > key(m)
COMBO space [^^&. .... ....] > key(space)
COMBO 1 [^^&. .... ....] > key(1)
COMBO 2 [^^&. .... ....] > key(2)
COMBO 3 [^^&. .... ....] > key(3)
COMBO 4 [^^&. .... ....] > key(4)
COMBO 5 [^^&. .... ....] > key(5)
COMBO 6 [^^&. .... ....] > key(6)
COMBO 7 [^^&. .... ....] > key(7)
COMBO 8 [^^&. .... ....] > key(8)
COMBO 9 [^^&. .... ....] > key(9)
COMBO 0 [^^&. .... ....] > key(0)

# navigation keys
COMBO d [.^..] > key(up)
COMBO f [.^..] > key(down)
COMBO e [.^..] > key(pgup)
COMBO s [.^..] > key(pgdown)
COMBO w [.^..] > key(left)
COMBO r [.^..] > key(right)

COMBO j [.^..] > key(down)
COMBO k [.^..] > key(up)
COMBO i [.^..] > key(left)
COMBO l [.^..] > key(right)

COMBO a [.^..] > key(esc)
COMBO space [.^..] > key(ret)

# hotkeys for browser features
COMBO q [.^..] > key(f5)
COMBO z [.^..] > combo(lctrl + z)
COMBO x [.^..] > combo(lctrl + ret)  # open in new tab
COMBO c [.^..] > combo(lctrl + c)
COMBO v [.^..] > combo(lctrl + v)
COMBO h [.^..] > combo(lctrl + t)
COMBO m [.^..] > combo(lctrl + t)
COMBO y [.^..] > key(space)  # play/pause for video players
COMBO o [.^..] > key(f)  # full-screen for video players
COMBO b [.^..] > combo(lctrl + w)
COMBO 3 [.^..] > combo(lctrl + l)  # select address bar

COMBO n [.^..] > combo(lctrl + n)  # new Firefox window
COMBO p [.^..] > combo(lctrl + lshf + p)  # new Firefox private window
COMBO u [.^..] > combo(lctrl + lshf + l)  # autofill Bitwarden credentials

COMBO t [.^..] > combo(lctrl + lshf + tab)
COMBO g [.^..] > combo(lctrl + tab)
COMBO 9 [.^..] > combo(lctrl + lshf + tab)
COMBO 0 [.^..] > combo(lctrl + tab)

# window and virtual desktop switching
COMBO 2 [.^..] > combo(lctrl + lwin + left)  # switch virtual desktop left
COMBO 4 [.^..] > combo(lctrl + lwin + right)  # switch virtual desktop right
COMBO 5 [.^..] > combo(lalt + tab)



[navigation]
# move around in text while staying on home row
COMBO j [^^&. .... ....] > key(down)
COMBO k [^^&. .... ....] > key(up)
COMBO i [^^&. .... ....] > key(left)
COMBO l [^^&. .... ....] > key(right)

COMBO d [^^&. .... ....] > key(home)
COMBO f [^^&. .... ....] > key(end)
COMBO e [^^&. .... ....] > key(pgup)
COMBO s [^^&. .... ....] > key(pgdown)

COMBO c [^^&. .... ....] > key(down)
COMBO x [^^&. .... ....] > key(up)
COMBO z [^^&. .... ....] > key(left)
COMBO v [^^&. .... ....] > key(right)

COMBO a [^^&. .... ....] > key(esc)
COMBO space [^^&. .... ....] > key(ret)



[accents]
# Czech accented chars
# requires EnableHexNumpad registry key enabled
COMBO 1 [^&] > altChar(+016F) #ů
COMBO 2 [^&] > altChar(+011B) #ě
COMBO 3 [^&] > altChar(0154)  #š
COMBO 4 [^&] > altChar(+010D) #č
COMBO 5 [^&] > altChar(+0159) #ř
COMBO 6 [^&] > altChar(0158)  #ž
COMBO 7 [^&] > altChar(0253)  #ý
COMBO 8 [^&] > altChar(160)   #á
COMBO 9 [^&] > altChar(161)   #í
COMBO 0 [^&] > altChar(130)   #é
COMBO - [^&] > altChar(163)   #ú
COMBO = [^&] > altChar(+0148) #ň

COMBO 1 [&&] > altChar(+016E) #Ů
COMBO 2 [&&] > altChar(+011A) #Ě
COMBO 3 [&&] > altChar(0138)  #Š
COMBO 4 [&&] > altChar(+010C) #Č
COMBO 5 [&&] > altChar(+0158) #Ř
COMBO 6 [&&] > altChar(0142)  #Ž
COMBO 7 [&&] > altChar(0221)  #Ý
COMBO 8 [&&] > altChar(0193)  #Á
COMBO 9 [&&] > altChar(0205)  #Í
COMBO 0 [&&] > altChar(0201)  #É
COMBO - [&&] > altChar(0218)  #Ú
COMBO = [&&] > altChar(+0147) #Ň



[special_chars]
# type special characters using CapsLock without moving away from home row too much
COMBO 1 [^^^& .... ....] > combo(lshf + 1) #!
COMBO 2 [^^^& .... ....] > combo(lshf + 2) #@
COMBO 3 [^^^& .... ....] > combo(lshf + 3) ##
COMBO 4 [^^^& .... ....] > combo(lshf + 4) #$
COMBO space [^^^& .... ....] > key(bsp) #Backspace
COMBO tab [^^^& .... ....] > key(del) #Delete

COMBO q [^^^& .... ....] > key(/)
COMBO w [^^^& .... ....] > key(;)
COMBO e [^^^& .... ....] > key([)
COMBO r [^^^& .... ....] > key(])
COMBO t [^^^& .... ....] > combo(lshf + -) #_
#COMBO y [^^^& .... ....] >
COMBO u [^^^& .... ....] > combo(lshf + 7) #&
COMBO i [^^^& .... ....] > combo(lshf + 8) #*
COMBO o [^^^& .... ....] > combo(lshf + 6) #^
#COMBO p [^^^& .... ....] >

COMBO a [^^^& .... ....] > key(`)
COMBO s [^^^& .... ....] > key(\)
COMBO d [^^^& .... ....] > combo(lshf + 9) #(
COMBO f [^^^& .... ....] > combo(lshf + 0) #)
COMBO g [^^^& .... ....] > combo(lshf + \) #|
COMBO h [^^^& .... ....] > combo(lshf + ;) #:
COMBO j [^^^& .... ....] > key(')
COMBO k [^^^& .... ....] > combo(lshf + ') #"
COMBO l [^^^& .... ....] > combo(lshf + =) #+

COMBO z [^^^& .... ....] > combo(lshf + `) #~
COMBO x [^^^& .... ....] > combo(lshf + /) #?
COMBO c [^^^& .... ....] > combo(lshf + [) #{
COMBO v [^^^& .... ....] > combo(lshf + ]) #}
COMBO b [^^^& .... ....] > combo(lshf + 5) #%
COMBO n [^^^& .... ....] > key(-)
COMBO m [^^^& .... ....] > key(=)
COMBO , [^^^& .... ...^] > combo(lshf + ,) #<
COMBO . [^^^& .... ...^] > combo(lshf + .) #>
#COMBO / [^^^& .... ...^] >

COMBO , [&] > altChar(0151) #— <- em-dash
COMBO . [&] > altChar(0176) #° <- degrees
COMBO / [&] > altChar(230) #µ
